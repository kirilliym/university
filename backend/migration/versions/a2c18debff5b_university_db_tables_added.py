"""university db tables added

Revision ID: a2c18debff5b
Revises: 78e076e64a2b
Create Date: 2024-12-04 21:29:02.454304

"""
from alembic import op
import sqlalchemy as sa

from project.core.config import settings


# revision identifiers, used by Alembic.
revision = 'a2c18debff5b'
down_revision = '78e076e64a2b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('professor',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('start_contract', sa.Date(), nullable=False),
    sa.Column('end_contract', sa.Date(), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.Column('salary', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('subject',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('exam',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('exam_date', sa.Date(), nullable=False),
    sa.Column('audience', sa.BigInteger(), nullable=False),
    sa.Column('subject', sa.BigInteger(), nullable=True),
    sa.Column('professor', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['professor'], ['university.professor.id'], ),
    sa.ForeignKeyConstraint(['subject'], ['university.subject.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('faculte',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('decan', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['decan'], ['university.professor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('nagruzka',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('professor', sa.BigInteger(), nullable=False),
    sa.Column('subject', sa.BigInteger(), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['professor'], ['university.professor.id'], ),
    sa.ForeignKeyConstraint(['subject'], ['university.subject.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('kafedra',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('faculte', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['faculte'], ['university.faculte.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('direction',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('kafedra', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['kafedra'], ['university.kafedra.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('grop',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('direction', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['direction'], ['university.direction.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('study_plan',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=False),
    sa.Column('direction', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['direction'], ['university.direction.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('student',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('passport', sa.BigInteger(), nullable=True),
    sa.Column('grop_id', sa.BigInteger(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('start_education', sa.Date(), nullable=False),
    sa.Column('end_education', sa.Date(), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['grop_id'], ['university.grop.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='university'
    )
    op.create_table('subject_in_study',
    sa.Column('study_plan', sa.BigInteger(), nullable=False),
    sa.Column('subject', sa.BigInteger(), nullable=False),
    sa.Column('hours', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['study_plan'], ['university.study_plan.id'], ),
    sa.ForeignKeyConstraint(['subject'], ['university.subject.id'], ),
    sa.PrimaryKeyConstraint('study_plan', 'subject'),
    schema='university'
    )
    op.create_table('grade',
    sa.Column('student', sa.BigInteger(), nullable=False),
    sa.Column('exam', sa.BigInteger(), nullable=False),
    sa.Column('grade', sa.Integer(), nullable=False),
    sa.Column('try_', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exam'], ['university.exam.id'], ),
    sa.ForeignKeyConstraint(['student'], ['university.student.id'], ),
    sa.PrimaryKeyConstraint('student', 'exam'),
    schema='university'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('grade', schema='university')
    op.drop_table('subject_in_study', schema='university')
    op.drop_table('student', schema='university')
    op.drop_table('study_plan', schema='university')
    op.drop_table('grop', schema='university')
    op.drop_table('direction', schema='university')
    op.drop_table('kafedra', schema='university')
    op.drop_table('nagruzka', schema='university')
    op.drop_table('faculte', schema='university')
    op.drop_table('exam', schema='university')
    op.drop_table('subject', schema='university')
    op.drop_table('professor', schema='university')
    # ### end Alembic commands ###
