"""users

Revision ID: 1f0e2170bd92
Revises: 81bfe00bee9a
Create Date: 2024-12-03 17:57:35.487563

"""
from alembic import op
import sqlalchemy as sa

from project.core.config import settings


# revision identifiers, used by Alembic.
revision = '1f0e2170bd92'
down_revision = '81bfe00bee9a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP TABLE IF EXISTS university.user_marks CASCADE')
    op.execute('DROP TABLE IF EXISTS university.studies CASCADE')
    op.add_column('users', sa.Column('login', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False), schema='university')
    op.add_column('users', sa.Column('avatar', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True), schema='university')
    op.drop_constraint('users_email_key', 'users', schema='university', type_='unique')
    op.drop_column('users', 'email', schema='university')
    op.drop_column('users', 'last_name', schema='university')
    op.drop_column('users', 'phone_number', schema='university')
    op.drop_column('users', 'first_name', schema='university')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False), schema='university')
    op.add_column('users', sa.Column('phone_number', sa.VARCHAR(length=255), autoincrement=False, nullable=True), schema='university')
    op.add_column('users', sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False), schema='university')
    op.add_column('users', sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False), schema='university')
    op.create_unique_constraint('users_email_key', 'users', ['email'], schema='university')
    op.drop_column('users', 'avatar', schema='university')
    op.drop_column('users', 'login', schema='university')
    op.create_table('studies',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('university.studies_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='studies_pkey'),
    schema='university',
    postgresql_ignore_search_path=False
    )
    op.create_table('user_marks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('mark', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('study_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['study_id'], ['university.studies.id'], name='user_marks_study_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['university.users.id'], name='user_marks_user_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_marks_pkey'),
    schema='university'
    )
    # ### end Alembic commands ###
